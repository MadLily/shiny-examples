#!/usr/bin/env Rscript

# Usage: ./deploy [app]; if app is missing, all apps under this directory will
# be deployed; otherwise deploy the app(s) specified. Note the shiny-dev-center
# repository must be under the same directory of this shiny-examples repository.
# Please ask garrett@rstudio.com if you want the credentials for the account
# `gallery` on ShinyApps.io. There are two optional arguments -d and -p, meaning
# deploy the app(s) without publishing to the gallery, and publish without
# deployment.

if (FALSE) {
  devtools::install_github('rstudio/shiny')
  devtools::install_github('rstudio/rsconnect')
}

# first, sync shiny examples
if (file_test('-d', '../shiny/inst/examples')) {
  for (app in list.dirs('../shiny/inst/examples', recursive = FALSE)) {
    dir.create(app1 <- sub('^(\\d\\d)_', '0\\1-', basename(app)), showWarnings = FALSE)
    file.copy(list.files(app, full.names = TRUE), app1, recursive = TRUE)
  }
}

# we reused report.Rmd in example 020, so make a hard link
system2('ln', '-f 016-knitr-pdf/report.Rmd 020-knit-html/')

# a font file that is needed for the example 022
if (!file.exists('022-unicode-chinese/wqy-zenhei.ttc'))
  shiny:::download(
    'https://github.com/rstudio/shiny-examples/releases/download/v0.10.1/wqy-zenhei.ttc',
    '022-unicode-chinese/wqy-zenhei.ttc'
  )

# then deploy all apps
library(methods)
library(rsconnect)

# ./deploy [-d] [-p] [001-hello 002-text ...]
args <- commandArgs(TRUE)
only_deploy <- FALSE
if ('-d' %in% args) {
  args <- setdiff(args, '-d')
  only_deploy <- TRUE
}
only_publish <- FALSE
if ('-p' %in% args) {
  args <- setdiff(args, '-p')
  only_publish <- TRUE
}

apps <- character()

# if no other arguments specified, use all the directories here
if (length(args) == 0) {
  apps <- list.dirs(full.names = FALSE, recursive = FALSE)
  apps <- grep('^[0-9]{3,}', apps, value = TRUE)

} else {
  # Can also `./deploy 001 002` without typing the full app names.

  # Find abbreviated args like '001'
  abbrevIdx <- !file_test('-d', args)

  if (any(abbrevIdx)) {
    if (!all(grep('^[0-9]{3,}$', args[abbrevIdx])))
      stop('Unknown app name(s) ', paste(args[abbrevIdx], collapse = ', '))

    fullNames <- grep(
      paste0('^', paste(args[abbrevIdx], collapse = '|')),
      list.dirs(recursive = FALSE, full.names = FALSE),
      value = TRUE
    )

    apps <- c(args[!abbrevIdx], fullNames)
  }
}

# Try deploying apps and get return codes (0 is success)
deployRes <- lapply(apps, function(app) {
  cat('-------- Deploying', app, '--------\n')
  if (!only_publish) {
    # need deployment
    res <- try(deployApp(app, account = 'gallery'))
    if (inherits(res, 'try-error')) {
      return(1)
    }
  }

  if (only_deploy) {
    # no need to publish posts
    return(0)
  }

  # If we get here, import the app in the shiny-dev-center
  system(paste(
    '../shiny-dev-center/_scripts/import.R',
    app,
    sprintf('https://gallery.shinyapps.io/%s', app),
    sprintf('https://github.com/rstudio/shiny-examples/tree/master/%s', app)
  ))
})

deployRes <- unlist(deployRes)

# Print apps that were not successfully deployed
if (any(deployRes != 0)) {
  cat(
    "Error deploying apps:\n",
    paste0("  ", apps[deployRes != 0], collapse = "\n"),
    "\n",
    sep = ""
  )
}
